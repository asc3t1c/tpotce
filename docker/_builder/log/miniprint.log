Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "mybuilder" instance using docker-container driver

#1 [miniprint internal] load build definition from Dockerfile
#1 transferring dockerfile: 942B 0.0s done
#1 DONE 0.0s

#2 [miniprint linux/arm64 internal] load metadata for docker.io/library/alpine:3.20
#2 ...

#3 [miniprint linux/amd64 internal] load metadata for docker.io/library/alpine:3.20
#3 DONE 0.5s

#2 [miniprint linux/arm64 internal] load metadata for docker.io/library/alpine:3.20
#2 DONE 0.5s

#4 [miniprint internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [miniprint linux/amd64 builder 1/7] FROM docker.io/library/alpine:3.20@sha256:de4fe7064d8f98419ea6b49190df1abbf43450c1702eeb864fe9ced453c1cc5f
#5 resolve docker.io/library/alpine:3.20@sha256:de4fe7064d8f98419ea6b49190df1abbf43450c1702eeb864fe9ced453c1cc5f 0.0s done
#5 DONE 0.0s

#6 [miniprint linux/amd64 builder 2/7] RUN apk --no-cache -U upgrade && 	apk --no-cache -U add 	build-base 	git 	python3     py3-pip
#6 CACHED

#7 [miniprint linux/amd64 builder 4/7] WORKDIR /opt/miniprint
#7 CACHED

#8 [miniprint linux/amd64 builder 5/7] RUN pip3 install --break-system-packages pyinstaller
#8 CACHED

#9 [miniprint linux/amd64 builder 7/7] RUN pyinstaller server.py 		--add-data "./fake-files:./fake-files" 		--add-data "./uploads:./uploads"
#9 CACHED

#10 [miniprint linux/amd64 stage-1 5/6] COPY --from=builder /opt/miniprint/uploads/ /opt/miniprint/uploads/
#10 CACHED

#11 [miniprint linux/amd64 stage-1 2/6] RUN apk --no-cache -U upgrade
#11 CACHED

#12 [miniprint linux/amd64 builder 3/7] RUN	MKDIR -p /opt && 	cd /opt/ && 	git clone https://github.com/t3chn0m4g3/miniprint
#12 CACHED

#13 [miniprint linux/amd64 builder 6/7] RUN	PIP3 install --break-system-packages -r requirements.txt
#13 CACHED

#14 [miniprint linux/amd64 stage-1 4/6] COPY --from=builder /opt/miniprint/fake-files/ /opt/miniprint/fake-files/
#14 CACHED

#15 [miniprint linux/amd64 stage-1 3/6] COPY --from=builder /opt/miniprint/dist/* /opt/miniprint/
#15 CACHED

#16 [miniprint linux/amd64 stage-1 6/6] WORKDIR /opt/miniprint/
#16 CACHED

#17 [miniprint linux/arm64 builder 1/7] FROM docker.io/library/alpine:3.20@sha256:de4fe7064d8f98419ea6b49190df1abbf43450c1702eeb864fe9ced453c1cc5f
#17 resolve docker.io/library/alpine:3.20@sha256:de4fe7064d8f98419ea6b49190df1abbf43450c1702eeb864fe9ced453c1cc5f 0.0s done
#17 DONE 0.0s

#18 [miniprint linux/arm64 stage-1 3/6] COPY --from=builder /opt/miniprint/dist/* /opt/miniprint/
#18 CACHED

#19 [miniprint linux/arm64 stage-1 5/6] COPY --from=builder /opt/miniprint/uploads/ /opt/miniprint/uploads/
#19 CACHED

#20 [miniprint linux/arm64 builder 3/7] RUN	MKDIR -p /opt && 	cd /opt/ && 	git clone https://github.com/t3chn0m4g3/miniprint
#20 CACHED

#21 [miniprint linux/arm64 builder 5/7] RUN pip3 install --break-system-packages pyinstaller
#21 CACHED

#22 [miniprint linux/arm64 builder 2/7] RUN apk --no-cache -U upgrade && 	apk --no-cache -U add 	build-base 	git 	python3     py3-pip
#22 CACHED

#23 [miniprint linux/arm64 builder 6/7] RUN	PIP3 install --break-system-packages -r requirements.txt
#23 CACHED

#24 [miniprint linux/arm64 builder 7/7] RUN pyinstaller server.py 		--add-data "./fake-files:./fake-files" 		--add-data "./uploads:./uploads"
#24 CACHED

#25 [miniprint linux/arm64 builder 4/7] WORKDIR /opt/miniprint
#25 CACHED

#26 [miniprint linux/arm64 stage-1 2/6] RUN apk --no-cache -U upgrade
#26 CACHED

#27 [miniprint linux/arm64 stage-1 4/6] COPY --from=builder /opt/miniprint/fake-files/ /opt/miniprint/fake-files/
#27 CACHED

#28 [miniprint linux/arm64 stage-1 6/6] WORKDIR /opt/miniprint/
#28 CACHED

#29 [miniprint] exporting to image
#29 exporting layers done
#29 exporting manifest sha256:5c99f34cf0cb22b8e65baf76590a453940a7e45bc7e169ff3bab73f4c5f484fa 0.0s done
#29 exporting config sha256:8bf8d9edb6486e53179bc349f6fd6445c3f0feb37828b28806f9293b9fd191f9 done
#29 exporting attestation manifest sha256:18c090d7c1bc749b66d06d188d09a874c9bd292141b999794e87bffa9faa85d8
#29 exporting attestation manifest sha256:18c090d7c1bc749b66d06d188d09a874c9bd292141b999794e87bffa9faa85d8 0.0s done
#29 exporting manifest sha256:025487521ba6e05a1d493ea817c0a08562bfb81dfb0d79b209ee0ce6445070fa 0.0s done
#29 exporting config sha256:d5939e1bda90a6460b6fdf712b781d7d6dfa5984cfde625550d4d46a7dfcd548 0.0s done
#29 exporting attestation manifest sha256:bef81a789e858d31ac6724e0f99b97d056e75b218d8e803a3f1da8bdc74bb5fb 0.0s done
#29 exporting manifest list sha256:cb47bff3f44b560e1e95dd6e9710b1d2e1a76206953f1e6a024c7efb797a5a62 0.0s done
#29 pushing layers
#29 ...

#30 [miniprint auth] f0rc3ps/miniprint:pull,push token for registry-1.docker.io
#30 DONE 0.0s

#29 [miniprint] exporting to image
#29 pushing layers 2.8s done
#29 pushing manifest for docker.io/f0rc3ps/miniprint:25.0.1@sha256:cb47bff3f44b560e1e95dd6e9710b1d2e1a76206953f1e6a024c7efb797a5a62
#29 pushing manifest for docker.io/f0rc3ps/miniprint:25.0.1@sha256:cb47bff3f44b560e1e95dd6e9710b1d2e1a76206953f1e6a024c7efb797a5a62 3.1s done
#29 ...

#31 [miniprint auth] asc3t1c/miniprint:pull,push token for ghcr.io
#31 DONE 0.0s

#29 [miniprint] exporting to image
#29 pushing layers 2.0s done
#29 pushing manifest for ghcr.io/asc3t1c/miniprint:25.0.1@sha256:cb47bff3f44b560e1e95dd6e9710b1d2e1a76206953f1e6a024c7efb797a5a62
#29 pushing manifest for ghcr.io/asc3t1c/miniprint:25.0.1@sha256:cb47bff3f44b560e1e95dd6e9710b1d2e1a76206953f1e6a024c7efb797a5a62 2.5s done
#29 DONE 10.5s

#32 [miniprint] resolving provenance for metadata file
#32 DONE 0.0s
